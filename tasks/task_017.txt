# Task ID: 17
# Title: Data Model & Repository Implementation
# Status: done
# Dependencies: 16
# Priority: medium
# Description: Create proper data models and repository classes for different entity types to standardize data handling across the application.
# Details:
Implement a structured data layer with model classes and repositories:

1. Create model classes for each entity type (Pies, PieItems, Transactions, Dividends, etc.) that:
   - Parse raw API data into structured objects
   - Provide validation and data transformation methods
   - Include calculated properties where appropriate

2. Implement repository classes for each entity type that:
   - Use the ApiClient for data fetching
   - Transform raw data into model instances
   - Handle saving data to appropriate sheets
   - Provide methods for querying and filtering data

Each repository should follow a consistent pattern with methods like:
- fetchAll() - Get all entities
- getById() - Get a specific entity
- saveToSheet() - Persist data to Google Sheets
- getRecent() - Get most recent entities

Repositories should handle the translation between API data format and the application's internal data structures.

# Test Strategy:
1. Unit test model classes with sample API responses to verify correct parsing
2. Test repository methods with mocked API client responses
3. Verify data transformation logic correctly converts between formats
4. Test sheet writing functionality with mock sheet objects
5. Verify filtering and query methods return expected results
6. Test error handling when API returns unexpected data formats
